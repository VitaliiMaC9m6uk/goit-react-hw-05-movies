{"version":3,"file":"static/js/959.560bc62c.chunk.js","mappings":"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","sources":["api/Search.js","components/CardFilm/CardFilm.jsx","pages/MoviePage/MoviePage.styled.js","pages/MoviePage/MoviePage.jsx"],"sourcesContent":["// const API_KEY = 'e03f5baf62035d5c2a9b07531dbf82b3';\n// const BASE_URL = 'https://api.themoviedb.org/3/';\n// const TRENDING = '/trending/movie/week';\n\n// export const getSearchFilm = (text, page) => {\n//   return fetch(\n//     `${BASE_URL}?q=${text}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\n//   ).then(response => response.json());\n// };\n\n// const options = {\n//   method: 'GET',\n//   headers: {\n//     accept: 'application/json',\n//     Authorization:\n//       'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlMDNmNWJhZjYyMDM1ZDVjMmE5YjA3NTMxZGJmODJiMyIsInN1YiI6IjY0NmU1NmNlODk0ZWQ2MDBiZjc3MmU2ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.xf-th2toWSgCpCZyJEXOpxX7iubeE5CzozquTSstVdQ',\n//   },\n// };\n\n// export const getTrendingFilm = (text, page) => {\n//     return fetch('https://api.themoviedb.org/3/trending/all/day?language=en-US', options)\n//         .then(response => response.json())\n// };\nimport axios from 'axios';\n\nconst API_KEY = 'e03f5baf62035d5c2a9b07531dbf82b3';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n export async function getTrendingFilm() {\n   const { data } = await axios.get(`/trending/movie/week`, {\n     params: { api_key: API_KEY },\n   });\n   return data.results;\n}\nexport async function getDetailFilm(movie_id) {\n  const { data } = await axios.get(`/movie/${movie_id}`, {\n    params: { api_key: API_KEY },\n    language: 'en-US',\n  });\n  return data;\n}\n\nexport async function getFindFilm(film) {\n  const { data } = await axios.get(`search/movie?query=${film}`, {\n    params: { api_key: API_KEY },\n    language: 'en-US',\n  });\n  return data;\n}\nexport async function getFilmCast(id) {\n  const { data } = await axios.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return data.cast;\n}\nexport async function getFilmReviews(id) {\n  const { data } = await axios.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',      \n    },\n  });\n  return data.results;\n}\n","import { Link } from \"react-router-dom\";\nimport defaultImg from '../../img/default-image.jpg'\n\nexport const CardFilm = ({ url, title, activeId, location }) => {    \n    return (\n    <li >\n      <Link to={`/movies/${activeId}`} state={{ from: location }}>\n        <img\n          \n          src={\n            url !== null ? `https://image.tmdb.org/t/p/w500${url}` : defaultImg\n          }\n          alt={title}\n        />\n        <h2 >{title}</h2>\n      </Link>\n    </li>\n  );\n};\n\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  gap: 10px;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nexport const Form = styled.form`\n  display:flex;\n  gap:10px;\n`","import { getFindFilm } from \"api/Search\";\nimport { CardFilm } from \"components/CardFilm/CardFilm\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useSearchParams } from \"react-router-dom\";\nimport { Form, List } from \"./MoviePage.styled\";\n\nconst MoviePage = () => {\n  const [film, setFilm] = useState([]);\n  const [find, setFind] = useState('');\n  const [error, setError] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movies = searchParams.get('movies');\n  const location = useLocation();\n  \n    const hendlerChange = ({ target: { value } }) => {\n        setFind(value);\n  };\n  \n  useEffect(() => {\n    if (!movies) {\n      return;\n    }\n    async function getData() {\n      try {\n        const data = await getFindFilm(movies.trim().replace(' ', '%20'));\n        setFilm(data.results);\n      } catch {\n        setError(true);\n      }\n    }\n    getData();\n  }, [movies]);\n    const hendlerSubmit = e => {\n    e.preventDefault();\n    if (find.trim() === '') {\n      return;\n      }\n    setSearchParams({ movies : e.target[0].value });    \n    setFind('')\n  };  \n    return (\n      <>\n        <Form onSubmit={hendlerSubmit}>\n          <label>Movie search</label>\n          <input onChange={hendlerChange} value={find}></input>\n          <button>Search</button>\n        </Form>\n\n        {!error && (\n          <List>\n            {film?.map(item => {\n              return (\n                <CardFilm\n                  location={location}\n                  key={item.id}\n                  title={item.original_title}\n                  url={item.poster_path}\n                  activeId={item.id}\n                />\n              );\n            })}\n          </List>\n        )}\n      </>\n    );\n}\nexport default MoviePage;"],"names":["API_KEY","getTrendingFilm","axios","params","api_key","data","results","getDetailFilm","movie_id","language","getFindFilm","film","getFilmCast","id","cast","getFilmReviews","CardFilm","url","title","activeId","location","to","state","from","src","defaultImg","alt","List","styled","Form","useState","setFilm","find","setFind","error","setError","useSearchParams","searchParams","setSearchParams","movies","get","useLocation","useEffect","trim","replace","getData","onSubmit","e","preventDefault","target","value","onChange","map","item","original_title","poster_path"],"sourceRoot":""}