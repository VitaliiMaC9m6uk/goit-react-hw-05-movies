{"version":3,"file":"static/js/779.51644aa5.chunk.js","mappings":"+SAyBMA,EAAU,mCAIR,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,EAAAA,EAAAA,IAAA,uBAAkC,CACvDC,OAAQ,CAAEC,QAASJ,KAFhB,uBACGK,EADH,EACGA,KADH,kBAIEA,EAAKC,SAJP,kEAMD,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,yFACkBN,EAAAA,EAAAA,IAAA,iBAAoBM,GAAY,CACrDL,OAAQ,CAAEC,QAASJ,GACnBS,SAAU,UAHP,uBACGJ,EADH,EACGA,KADH,kBAKEA,GALF,kEAQA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,yFACkBT,EAAAA,EAAAA,IAAA,6BAAgCS,GAAQ,CAC7DR,OAAQ,CAAEC,QAASJ,GACnBS,SAAU,UAHP,uBACGJ,EADH,EACGA,KADH,kBAKEA,GALF,kEAOA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,yFACkBX,EAAAA,EAAAA,IAAA,iBAAoBW,EAApB,YAAkC,CACvDV,OAAQ,CACNC,QAASJ,EACTS,SAAU,WAJT,uBACGJ,EADH,EACGA,KADH,kBAOEA,EAAKS,MAPP,kEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BF,GAA9B,yFACkBX,EAAAA,EAAAA,IAAA,iBAAoBW,EAApB,YAAkC,CACvDV,OAAQ,CACNC,QAASJ,EACTS,SAAU,WAJT,uBACGJ,EADH,EACGA,KADH,kBAOEA,EAAKC,SAPP,kEAhCPJ,EAAAA,EAAAA,SAAAA,QAAyB,+B,iJCzBZc,E,OAAOC,GAAAA,GAAH,8D,SCkCjB,EA/BgB,WACf,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACMnB,GAASoB,EAAAA,EAAAA,MACNV,EAAE,OAAGV,QAAH,IAAGA,OAAH,EAAGA,EAAQqB,QAYvB,OAXIC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,8GAE2BV,EAAAA,EAAAA,IAAeF,GAF1C,OAEcR,EAFd,OAGQe,EAAWf,GAHnB,gDAKQiB,GAAS,GALjB,0DADY,uBAAC,WAAD,wBASZI,EACH,KAEH,+BACIL,IACA,SAACL,EAAD,iBACGG,QADH,IACGA,OADH,EACGA,EAASQ,KAAI,SAAAC,GAAM,OAClB,2BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFJF,EAAOf,GADE,OAU3B,C","sources":["api/Search.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["// const API_KEY = 'e03f5baf62035d5c2a9b07531dbf82b3';\n// const BASE_URL = 'https://api.themoviedb.org/3/';\n// const TRENDING = '/trending/movie/week';\n\n// export const getSearchFilm = (text, page) => {\n//   return fetch(\n//     `${BASE_URL}?q=${text}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\n//   ).then(response => response.json());\n// };\n\n// const options = {\n//   method: 'GET',\n//   headers: {\n//     accept: 'application/json',\n//     Authorization:\n//       'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlMDNmNWJhZjYyMDM1ZDVjMmE5YjA3NTMxZGJmODJiMyIsInN1YiI6IjY0NmU1NmNlODk0ZWQ2MDBiZjc3MmU2ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.xf-th2toWSgCpCZyJEXOpxX7iubeE5CzozquTSstVdQ',\n//   },\n// };\n\n// export const getTrendingFilm = (text, page) => {\n//     return fetch('https://api.themoviedb.org/3/trending/all/day?language=en-US', options)\n//         .then(response => response.json())\n// };\nimport axios from 'axios';\n\nconst API_KEY = 'e03f5baf62035d5c2a9b07531dbf82b3';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n export async function getTrendingFilm() {\n   const { data } = await axios.get(`/trending/movie/week`, {\n     params: { api_key: API_KEY },\n   });\n   return data.results;\n}\nexport async function getDetailFilm(movie_id) {\n  const { data } = await axios.get(`/movie/${movie_id}`, {\n    params: { api_key: API_KEY },\n    language: 'en-US',\n  });\n  return data;\n}\n\nexport async function getFindFilm(film) {\n  const { data } = await axios.get(`search/movie?query=${film}`, {\n    params: { api_key: API_KEY },\n    language: 'en-US',\n  });\n  return data;\n}\nexport async function getFilmCast(id) {\n  const { data } = await axios.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return data.cast;\n}\nexport async function getFilmReviews(id) {\n  const { data } = await axios.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',      \n    },\n  });\n  return data.results;\n}\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\nlist-style:none;\nmargin-right:30px;\n`","import { getFilmReviews } from \"api/Search\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { List } from \"./Reviews.styled\";\n\nconst Reviews = () => {\n const [reviews, setReviews] = useState([]);\n const [error, setError] = useState(false);\n const params = useParams();\n    const id = params?.movieId; \n    useEffect(() => {\n        async function getData() {\n            try {\n                const data = await getFilmReviews(id);\n                setReviews(data);\n            } catch {\n                setError(true);\n            }\n        }\n        getData();\n    })\nreturn (\n  <>\n    {!error && (\n      <List>\n        {reviews?.map(review => (\n          <li key={review.id}>\n            <h4>{review.author}</h4>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </List>\n    )}\n  </>\n);\n};\nexport default Reviews;\n"],"names":["API_KEY","getTrendingFilm","axios","params","api_key","data","results","getDetailFilm","movie_id","language","getFindFilm","film","getFilmCast","id","cast","getFilmReviews","List","styled","useState","reviews","setReviews","error","setError","useParams","movieId","useEffect","getData","map","review","author","content"],"sourceRoot":""}