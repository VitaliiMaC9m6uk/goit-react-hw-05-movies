{"version":3,"file":"static/js/387.6a758a73.chunk.js","mappings":"+SAyBMA,EAAU,mCAIR,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,EAAAA,EAAAA,IAAA,uBAAkC,CACvDC,OAAQ,CAAEC,QAASJ,KAFhB,uBACGK,EADH,EACGA,KADH,kBAIEA,EAAKC,SAJP,kEAMD,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,yFACkBN,EAAAA,EAAAA,IAAA,iBAAoBM,GAAY,CACrDL,OAAQ,CAAEC,QAASJ,GACnBS,SAAU,UAHP,uBACGJ,EADH,EACGA,KADH,kBAKEA,GALF,kEAQA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,yFACkBT,EAAAA,EAAAA,IAAA,6BAAgCS,GAAQ,CAC7DR,OAAQ,CAAEC,QAASJ,GACnBS,SAAU,UAHP,uBACGJ,EADH,EACGA,KADH,kBAKEA,GALF,kEAOA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,yFACkBX,EAAAA,EAAAA,IAAA,iBAAoBW,EAApB,YAAkC,CACvDV,OAAQ,CACNC,QAASJ,EACTS,SAAU,WAJT,uBACGJ,EADH,EACGA,KADH,kBAOEA,EAAKS,MAPP,kEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BF,GAA9B,yFACkBX,EAAAA,EAAAA,IAAA,iBAAoBW,EAApB,YAAkC,CACvDV,OAAQ,CACNC,QAASJ,EACTS,SAAU,WAJT,uBACGJ,EADH,EACGA,KADH,kBAOEA,EAAKC,SAPP,kEAhCPJ,EAAAA,EAAAA,SAAAA,QAAyB,+B,uKCzBZc,EAAOC,EAAAA,GAAAA,GAAH,mGAOJC,EAAMD,EAAAA,GAAAA,IAAH,sCAGHE,EAAcF,EAAAA,GAAAA,GAAH,sC,SCkCxB,EAvCa,WACT,OAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACMrB,GAASsB,EAAAA,EAAAA,MACTZ,EAAE,OAAGV,QAAH,IAAGA,OAAH,EAAGA,EAAQuB,QAYnB,OAXAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBf,EAAAA,EAAAA,IAAYC,GAFnC,OAEUR,EAFV,OAGIiB,EAAUjB,GAHd,gDAKImB,GAAS,GALb,0DADc,uBAAC,WAAD,wBASdI,EACD,GAAE,CAACf,KAEF,+BACIU,IACA,SAACP,EAAD,iBACGK,QADH,IACGA,OADH,EACGA,EAAQQ,KAAI,SAAAC,GAAK,OAChB,UAACX,EAAD,YACE,SAACD,EAAD,CACEa,IACED,EAAME,aAAN,yCACsCF,EAAME,cACxCC,EAENC,IAAI,MAEN,uBAAIJ,EAAMK,QACV,uBAAIL,EAAMM,cAVMN,EAAMjB,GADR,OAkB7B,C","sources":["api/Search.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["// const API_KEY = 'e03f5baf62035d5c2a9b07531dbf82b3';\n// const BASE_URL = 'https://api.themoviedb.org/3/';\n// const TRENDING = '/trending/movie/week';\n\n// export const getSearchFilm = (text, page) => {\n//   return fetch(\n//     `${BASE_URL}?q=${text}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\n//   ).then(response => response.json());\n// };\n\n// const options = {\n//   method: 'GET',\n//   headers: {\n//     accept: 'application/json',\n//     Authorization:\n//       'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlMDNmNWJhZjYyMDM1ZDVjMmE5YjA3NTMxZGJmODJiMyIsInN1YiI6IjY0NmU1NmNlODk0ZWQ2MDBiZjc3MmU2ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.xf-th2toWSgCpCZyJEXOpxX7iubeE5CzozquTSstVdQ',\n//   },\n// };\n\n// export const getTrendingFilm = (text, page) => {\n//     return fetch('https://api.themoviedb.org/3/trending/all/day?language=en-US', options)\n//         .then(response => response.json())\n// };\nimport axios from 'axios';\n\nconst API_KEY = 'e03f5baf62035d5c2a9b07531dbf82b3';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n export async function getTrendingFilm() {\n   const { data } = await axios.get(`/trending/movie/week`, {\n     params: { api_key: API_KEY },\n   });\n   return data.results;\n}\nexport async function getDetailFilm(movie_id) {\n  const { data } = await axios.get(`/movie/${movie_id}`, {\n    params: { api_key: API_KEY },\n    language: 'en-US',\n  });\n  return data;\n}\n\nexport async function getFindFilm(film) {\n  const { data } = await axios.get(`search/movie?query=${film}`, {\n    params: { api_key: API_KEY },\n    language: 'en-US',\n  });\n  return data;\n}\nexport async function getFilmCast(id) {\n  const { data } = await axios.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return data.cast;\n}\nexport async function getFilmReviews(id) {\n  const { data } = await axios.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',      \n    },\n  });\n  return data.results;\n}\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\ndisplay:flex;\nflex-wrap:wrap;\ngap:10px;\nlist-style:none;\nmargin:10px;\n`\nexport const Img = styled.img`\nwidth:200px;\n`\nexport const ListElement = styled.li`\nwidth:200px;\n`","import { getFilmCast } from \"api/Search\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport defaultImgCast from \"../../img/default-image.jpg\"\nimport { Img, List, ListElement } from \"./Cast.styled\";\n\n\nconst Cast = () => {\n    const [actors, setActors] = useState([])\n    const [error, setError] = useState(false);\n    const params = useParams();\n    const id = params?.movieId;\n    useEffect(() => {\n      async function getData() {\n        try {\n          const data = await getFilmCast(id);\n          setActors(data);\n        } catch {\n          setError(true);\n        }\n      }\n      getData();\n    }, [id]);\n    return (\n      <>\n        {!error && (\n          <List>\n            {actors?.map(actor => (\n              <ListElement key={actor.id}>\n                <Img\n                  src={\n                    actor.profile_path\n                      ? `https://image.tmdb.org/t/p/w200${actor.profile_path}`\n                      : defaultImgCast\n                  }\n                  alt=\"\"\n                ></Img>\n                <p>{actor.name}</p>\n                <p>{actor.character}</p>\n              </ListElement>\n            ))}\n          </List>\n        )}\n      </>\n    ); \n}\nexport default Cast;"],"names":["API_KEY","getTrendingFilm","axios","params","api_key","data","results","getDetailFilm","movie_id","language","getFindFilm","film","getFilmCast","id","cast","getFilmReviews","List","styled","Img","ListElement","useState","actors","setActors","error","setError","useParams","movieId","useEffect","getData","map","actor","src","profile_path","defaultImgCast","alt","name","character"],"sourceRoot":""}