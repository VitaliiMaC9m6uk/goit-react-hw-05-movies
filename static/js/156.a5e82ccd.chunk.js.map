{"version":3,"file":"static/js/156.a5e82ccd.chunk.js","mappings":"+SAyBMA,EAAU,mCAIR,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,EAAAA,EAAAA,IAAA,uBAAkC,CACvDC,OAAQ,CAAEC,QAASJ,KAFhB,uBACGK,EADH,EACGA,KADH,kBAIEA,EAAKC,SAJP,kEAMD,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,yFACkBN,EAAAA,EAAAA,IAAA,iBAAoBM,GAAY,CACrDL,OAAQ,CAAEC,QAASJ,GACnBS,SAAU,UAHP,uBACGJ,EADH,EACGA,KADH,kBAKEA,GALF,kEAQA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,yFACkBT,EAAAA,EAAAA,IAAA,6BAAgCS,GAAQ,CAC7DR,OAAQ,CAAEC,QAASJ,GACnBS,SAAU,UAHP,uBACGJ,EADH,EACGA,KADH,kBAKEA,GALF,kEAOA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,yFACkBX,EAAAA,EAAAA,IAAA,iBAAoBW,EAApB,YAAkC,CACvDV,OAAQ,CACNC,QAASJ,EACTS,SAAU,WAJT,uBACGJ,EADH,EACGA,KADH,kBAOEA,EAAKS,MAPP,kEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BF,GAA9B,yFACkBX,EAAAA,EAAAA,IAAA,iBAAoBW,EAApB,YAAkC,CACvDV,OAAQ,CACNC,QAASJ,EACTS,SAAU,WAJT,uBACGJ,EADH,EACGA,KADH,kBAOEA,EAAKC,SAPP,kEAhCPJ,EAAAA,EAAAA,SAAAA,QAAyB,+B,oFCxBZc,EAAW,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC7C,OACA,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAYG,MAAO,CAAEC,KAAMH,GAAhD,WACE,gBAEEI,IACU,OAARP,EAAA,yCAAiDA,GAAQQ,EAE3DC,IAAKR,KAEP,wBAAMA,QAIb,C,0JChBYS,E,OAAOC,GAAAA,GAAH,oH,SC0CjB,EAtCiB,WACf,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEMb,GAAWc,EAAAA,EAAAA,MAcjB,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBlC,EAAAA,EAAAA,MAFvB,OAEUI,EAFV,OAGI0B,EAAS1B,GAHb,gDAKI4B,GAAS,GALb,0DADc,uBAAC,WAAD,wBASdG,EACD,GAAE,KAID,+BACIJ,IACA,SAACL,EAAD,iBACGG,QADH,IACGA,OADH,EACGA,EAAOO,KAAI,SAAAC,GACV,OACE,SAACtB,EAAA,EAAD,CACEI,SAAUA,EAEVF,MAAOoB,EAAKC,eACZtB,IAAKqB,EAAKE,YACVrB,SAAUmB,EAAKzB,IAHVyB,EAAKC,eAMf,OAKV,C","sources":["api/Search.js","components/CardFilm/CardFilm.jsx","pages/HomePage/HomePage.styled.js","pages/HomePage/HomePage.jsx"],"sourcesContent":["// const API_KEY = 'e03f5baf62035d5c2a9b07531dbf82b3';\n// const BASE_URL = 'https://api.themoviedb.org/3/';\n// const TRENDING = '/trending/movie/week';\n\n// export const getSearchFilm = (text, page) => {\n//   return fetch(\n//     `${BASE_URL}?q=${text}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\n//   ).then(response => response.json());\n// };\n\n// const options = {\n//   method: 'GET',\n//   headers: {\n//     accept: 'application/json',\n//     Authorization:\n//       'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlMDNmNWJhZjYyMDM1ZDVjMmE5YjA3NTMxZGJmODJiMyIsInN1YiI6IjY0NmU1NmNlODk0ZWQ2MDBiZjc3MmU2ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.xf-th2toWSgCpCZyJEXOpxX7iubeE5CzozquTSstVdQ',\n//   },\n// };\n\n// export const getTrendingFilm = (text, page) => {\n//     return fetch('https://api.themoviedb.org/3/trending/all/day?language=en-US', options)\n//         .then(response => response.json())\n// };\nimport axios from 'axios';\n\nconst API_KEY = 'e03f5baf62035d5c2a9b07531dbf82b3';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n export async function getTrendingFilm() {\n   const { data } = await axios.get(`/trending/movie/week`, {\n     params: { api_key: API_KEY },\n   });\n   return data.results;\n}\nexport async function getDetailFilm(movie_id) {\n  const { data } = await axios.get(`/movie/${movie_id}`, {\n    params: { api_key: API_KEY },\n    language: 'en-US',\n  });\n  return data;\n}\n\nexport async function getFindFilm(film) {\n  const { data } = await axios.get(`search/movie?query=${film}`, {\n    params: { api_key: API_KEY },\n    language: 'en-US',\n  });\n  return data;\n}\nexport async function getFilmCast(id) {\n  const { data } = await axios.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return data.cast;\n}\nexport async function getFilmReviews(id) {\n  const { data } = await axios.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',      \n    },\n  });\n  return data.results;\n}\n","import { Link } from \"react-router-dom\";\nimport defaultImg from '../../img/default-image.jpg'\n\nexport const CardFilm = ({ url, title, activeId, location }) => {    \n    return (\n    <li >\n      <Link to={`/movies/${activeId}`} state={{ from: location }}>\n        <img\n          \n          src={\n            url !== null ? `https://image.tmdb.org/t/p/w500${url}` : defaultImg\n          }\n          alt={title}\n        />\n        <h2 >{title}</h2>\n      </Link>\n    </li>\n  );\n};\n\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\nlist-style:none;\ndisplay:flex;\ngap:10px;\nflex-wrap:wrap;\njustify-content:space-around;\n`\n","import { getTrendingFilm } from \"api/Search\";\nimport { CardFilm } from \"components/CardFilm/CardFilm\";\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { List } from \"./HomePage.styled\";\n\nconst HomePage = () => {\n  const [films, setFilms] = useState([])\n  const [error, setError] = useState(false)\n  \n  const location = useLocation();  \n  useEffect(() => {    \n    async function getData() {\n      try {\n        const data = await getTrendingFilm();\n        setFilms(data);\n      } catch {\n        setError(true)\n      }\n    }\n    getData();\n  }, []);  \n \n\n  return (\n    <>\n      {!error && (\n        <List>\n          {films?.map(item => {\n            return (\n              <CardFilm\n                location={location}\n                key={item.original_title}\n                title={item.original_title}\n                url={item.poster_path}\n                activeId={item.id}\n              />\n            );\n          })}\n        </List>\n      )}\n    </>\n  );\n}\nexport default HomePage;\n\n"],"names":["API_KEY","getTrendingFilm","axios","params","api_key","data","results","getDetailFilm","movie_id","language","getFindFilm","film","getFilmCast","id","cast","getFilmReviews","CardFilm","url","title","activeId","location","to","state","from","src","defaultImg","alt","List","styled","useState","films","setFilms","error","setError","useLocation","useEffect","getData","map","item","original_title","poster_path"],"sourceRoot":""}